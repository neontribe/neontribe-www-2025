---
export interface Props {
  href?: string;
  variant?: 'primary' | 'secondary' | 'teal' | 'amethyst';
  size?: 'sm' | 'md' | 'lg';
  children: any;
  external?: boolean;
}

const { 
  href, 
  variant = 'primary', 
  size = 'md', 
  children, 
  external = false
} = Astro.props;

const baseClasses = "rounded-lg font-semibold flex items-center space-x-2 transition-colors";
const sizeClasses = {
  sm: "px-4 py-2 text-sm",
  md: "px-6 py-3",
  lg: "px-8 py-4 text-lg"
};
const variantClasses = {
  primary: "text-white",
  secondary: "bg-neutral-grey hover:bg-neutral-grey/80 text-text-darker",
  teal: "text-white",
  amethyst: "text-white"
};

const variantStyles = {
  primary: "background-color: var(--color-accent-amethyst);",
  secondary: "",
  teal: "background-color: var(--color-accent-turquoise);",
  amethyst: "background-color: var(--color-accent-amethyst);"
};

const classes = `${baseClasses} ${sizeClasses[size]} ${variantClasses[variant]}`;
const style = variantStyles[variant];
---

{href ? (
  <a href={href} class={classes} style={style} target={external ? "_blank" : undefined} rel={external ? "noopener noreferrer" : undefined}>
    <span>{children}</span>
    <span>→</span>
  </a>
) : (
  <button class={classes} style={style}>
    <span>{children}</span>
    <span>→</span>
  </button>
)}
